#!/bin/bash

setup_diamond()
{
	# we need only change the first instance, [[GraphiteHandler]],
	# because that's the only collector we're using, but this will
	# also change [[GraphitePickleHandler]], which should be ok;
	# that will handle the case where someone later goes to enable
	# the Pickle handler.  Another option would be to add a 
	# host= .conf fragment in /etc/diamond/handlers/GraphiteHandler.conf,	
	# since that would override the options in /etc/diamond/diamond.conf
	#
	# Also, increase diamond polling interval for all collectors

	sed -e 's/host = graphite/host = calamari/' \
	    -e 's/# interval = 300/interval = 60/' \
		< /etc/diamond/diamond.conf.example \
		> /etc/diamond/diamond.conf
	cp /etc/default/diamond /etc/default/diamond.orig
	sed -i 's/ENABLE_DIAMOND=".*"/ENABLE_DIAMOND="yes"/' \
		/etc/default/diamond
	sed -i 's/DIAMOND_USER=".*"/DIAMOND_USER="root"/' \
		/etc/default/diamond
}

unconfigure_diamond()
{
	rm -f /etc/diamond/diamond.conf
	[ -e /etc/default/diamond.orig ] && \
		mv /etc/default/diamond.orig /etc/default/diamond
}

# XXX I don't understand the need for stop diamond || true, but sometimes
# stop errors with "unknown instance".  Maybe there's something odd
# about the diamond task that makes that happen?...

case "$1" in
	configure)
		setup_diamond
		[ -x /sbin/start ] && (stop diamond || true) && start diamond
		;;
	abort-upgrade|abort-remove|abort-deconfigure)
		unconfigure_diamond
		[ -x /sbin/stop ] && (stop diamond || true)
		:
		;;
	*)
		echo "postinst called with unknown argument $1" >&2
		exit 1
		;;
esac

#DEBHELPER#

exit 0
